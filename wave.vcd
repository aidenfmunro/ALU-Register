$date
	Mon Mar 24 14:26:37 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module alu_register_tb $end
$var wire 8 ! result [7:0] $end
$var parameter 32 " WIDTH $end
$var reg 1 # clk $end
$var reg 8 $ first [7:0] $end
$var reg 3 % opcode [2:0] $end
$var reg 1 & rst $end
$var reg 8 ' second [7:0] $end
$scope module uut $end
$var wire 1 # clk_i $end
$var wire 8 ( first_i [7:0] $end
$var wire 3 ) opcode_i [2:0] $end
$var wire 1 & rst_i $end
$var wire 8 * second_i [7:0] $end
$var parameter 32 + WIDTH $end
$var reg 8 , result_o [7:0] $end
$var reg 8 - result_reg [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 +
b1000 "
$end
#0
$dumpvars
bx -
bx ,
b0 *
b0 )
b0 (
b0 '
1&
b0 %
b0 $
0#
bx !
$end
#5000
b0 -
1#
#10000
0#
b11001100 '
b11001100 *
b10101010 $
b10101010 (
0&
#15000
b0 !
b0 ,
b1110111 -
1#
#20000
0#
#25000
b1110111 !
b1110111 ,
1#
#30000
0#
b10101010 '
b10101010 *
b11110000 $
b11110000 (
b1 %
b1 )
#35000
b1011010 -
1#
#40000
0#
#45000
b1011010 !
b1011010 ,
1#
#50000
0#
b110010 '
b110010 *
b1100100 $
b1100100 (
b10 %
b10 )
#55000
b10010110 -
1#
#60000
0#
#65000
b10010110 !
b10010110 ,
1#
#70000
0#
b10 '
b10 *
b10011001 $
b10011001 (
b11 %
b11 )
#75000
b11100110 -
1#
#80000
0#
#85000
b11100110 !
b11100110 ,
1#
#90000
0#
b1010101 '
b1010101 *
b110011 $
b110011 (
b100 %
b100 )
#95000
b1110111 -
1#
#100000
0#
#105000
b1110111 !
b1110111 ,
1#
#110000
0#
b10 '
b10 *
b1111 $
b1111 (
b101 %
b101 )
#115000
b111100 -
1#
#120000
0#
#125000
b111100 !
b111100 ,
1#
#130000
0#
b1010101 $
b1010101 (
b110 %
b110 )
#135000
b10101010 -
1#
#140000
0#
#145000
b10101010 !
b10101010 ,
1#
#150000
0#
b1100100 '
b1100100 *
b110010 $
b110010 (
b111 %
b111 )
#155000
b1 -
1#
#160000
0#
#165000
b1 !
b1 ,
1#
#170000
0#
b110010 '
b110010 *
b1100100 $
b1100100 (
#175000
b0 -
1#
#180000
0#
#185000
b0 !
b0 ,
1#
#190000
0#
1&
#195000
1#
#200000
0#
#205000
1#
#210000
0#
